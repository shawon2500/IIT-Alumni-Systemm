/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjectFrame;

import java.awt.HeadlessException;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shawon
 */
public class Requested extends javax.swing.JFrame {

    int count = 0;

    /**
     * Creates new form Requested
     */
    public Requested() {
        super("Institute of Information Technology, Alumni Association ");
        initComponents();
        try {
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/db", "root", "BokhtiarS250@");
            Statement st = con.createStatement();
            ResultSet rs;
            rs = st.executeQuery("select *from student");
            DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
            if (rs.next() == true) {
                String email = rs.getString("Email");

                String Fname = rs.getString("First Name");
                String Lname = rs.getString("Last Name");
                String Phone = rs.getString("Phone No");
                String Address = rs.getString("Address");
                String Batch = rs.getString("Batch");
                String Roll = rs.getString("Roll");
                String Hall = rs.getString("Hall");
                String Dob = rs.getString("Date of Birth");
                String Cwp = rs.getString("Current Working Place");
                String Gender = rs.getString("Gender");
                String Religion = rs.getString("Religion");
                String Blood = rs.getString("Blood Group");
                String Skills = rs.getString("Skills");
                Object[] data = {email, Fname, Lname, Phone, Address, Batch, Roll, Hall, Dob, Cwp, Gender, Religion, Blood, Skills};
                tb.addRow(data);
                byte[] img = rs.getBytes("Image");
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                Image myImg = im.getScaledInstance(pic.getWidth(), pic.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myImg);
                pic.setIcon(newImage);
                img = rs.getBytes("idcard");
                image = new ImageIcon(img);
                im = image.getImage();
                myImg = im.getScaledInstance(id.getWidth(), id.getHeight(), Image.SCALE_SMOOTH);
                newImage = new ImageIcon(myImg);
                id.setIcon(newImage);
                img = rs.getBytes("hons");
                image = new ImageIcon(img);
                im = image.getImage();
                myImg = im.getScaledInstance(hon.getWidth(), hon.getHeight(), Image.SCALE_SMOOTH);
                newImage = new ImageIcon(myImg);
                hon.setIcon(newImage);

                con.close();
            } else {
                JOptionPane.showMessageDialog(null, "No requests!");
            }

        } catch (SQLException ex) {
            Logger.getLogger(SearchStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        title = new javax.swing.JLabel();
        hon = new javax.swing.JLabel();
        pic = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        next = new javax.swing.JButton();
        accept = new javax.swing.JButton();
        deny = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mm = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        deny1 = new javax.swing.JButton();
        backbutton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setFont(new java.awt.Font("Arial Black", 0, 13)); // NOI18N

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Email", "First Name", "Last Name", "Phone No", "Address", "Batch", "Roll", "Hall", "Date of Birth", "Current Working Place", "Gender", "Religion", "Blood Group", "Skills"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 1260, 70));

        title.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 0, 0));
        title.setText("REQUESTED APPLICATION");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 380, -1));
        getContentPane().add(hon, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 230, 390, 300));
        getContentPane().add(pic, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 390, 300));
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 230, 390, 300));

        next.setBackground(new java.awt.Color(0, 153, 0));
        next.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        next.setText("NEXT");
        next.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });
        getContentPane().add(next, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 640, 130, -1));

        accept.setBackground(new java.awt.Color(0, 153, 0));
        accept.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        accept.setText("ACCEPT");
        accept.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptActionPerformed(evt);
            }
        });
        getContentPane().add(accept, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 640, 140, -1));

        deny.setBackground(new java.awt.Color(0, 153, 0));
        deny.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        deny.setText("DENY");
        deny.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denyActionPerformed(evt);
            }
        });
        getContentPane().add(deny, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 640, 130, -1));

        mm.setColumns(20);
        mm.setRows(5);
        jScrollPane2.setViewportView(mm);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 570, 300, 120));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("ENTER THE REASON FOR HOLDING");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 540, 250, -1));

        deny1.setBackground(new java.awt.Color(0, 153, 0));
        deny1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        deny1.setText("DENY");
        deny1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deny1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deny1ActionPerformed(evt);
            }
        });
        getContentPane().add(deny1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 640, 130, -1));

        backbutton.setBackground(new java.awt.Color(204, 204, 255));
        backbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectFrame/backbutton.png"))); // NOI18N
        backbutton.setBorder(null);
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(backbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 60));

        background.setForeground(new java.awt.Color(204, 255, 204));
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectFrame/background.jpg"))); // NOI18N
        background.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 780));

        pack();
    }// </editor-fold>//GEN-END:initComponents
int c = 0, flag = 0;
    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        String tomail = null;
        try {
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/db", "root", "BokhtiarS250@");
            Statement st = con.createStatement();
            ResultSet rs;
            rs = st.executeQuery("select *from student");
            for (int i = 0; i <= c; i++) {
                if (rs.next() == false) {
                    flag = 1;
                }
            }
            tomail = rs.getString(1);

        } catch (SQLException e) {
            System.out.println(e);
        }
        String frommail = "ts503891@gmail.com";
        String subject = "hello";
        String pass = "tonystark503891";
        Properties pro = new Properties();
        pro.put("mail.smtp.auth", "true");
        pro.put("mail.smtp.starttls.enable", "true");
        pro.put("mail.smtp.host", "smtp.gmail.com");
        pro.put("mail.smtp.port", "587");
        Session s;
        s = Session.getDefaultInstance(pro, new javax.mail.Authenticator() {
            @Override
            protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                return new javax.mail.PasswordAuthentication(frommail, pass);
            }
        });
        try {
            MimeMessage m = new MimeMessage(s);
            m.setFrom(new InternetAddress(frommail));
            m.addRecipient(Message.RecipientType.TO, new InternetAddress(tomail));
            m.setSubject(subject);
            m.setText(mm.getText());
            Transport.send(m);

        } catch (HeadlessException | MessagingException e) {
            System.out.println(e);
        }

        c++;
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        tb.getDataVector().removeAllElements();
        tb.fireTableDataChanged();
        try {
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/db", "root", "BokhtiarS250@");
            Statement st = con.createStatement();
            ResultSet rs;
            rs = st.executeQuery("select *from student");
            for (int i = 0; i <= c; i++) {
                if (rs.next() == false) {
                    hon.setIcon(null);
                    id.setIcon(null);
                    pic.setIcon(null);
                    flag = 1;
                }
            }
            if (flag == 1) {
                JOptionPane.showMessageDialog(null, "No more requests!");
            }
            if (flag == 0) {
                String email = rs.getString("Email");
                String Fname = rs.getString("First Name");
                String Lname = rs.getString("Last Name");
                String Phone = rs.getString("Phone No");
                String Address = rs.getString("Address");
                String Batch = rs.getString("Batch");
                String Roll = rs.getString("Roll");
                String Hall = rs.getString("Hall");
                String Dob = rs.getString("Date of Birth");
                String Cwp = rs.getString("Current Working Place");
                String Gender = rs.getString("Gender");
                String Religion = rs.getString("Religion");
                String Blood = rs.getString("Blood Group");
                String Skills = rs.getString("Skills");
                Object[] data = {email, Fname, Lname, Phone, Address, Batch, Roll, Hall, Dob, Cwp, Gender, Religion, Blood, Skills};
                tb.addRow(data);
                byte[] img = rs.getBytes("Image");
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                Image myImg = im.getScaledInstance(pic.getWidth(), pic.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myImg);
                pic.setIcon(newImage);
                img = rs.getBytes("idcard");
                image = new ImageIcon(img);
                im = image.getImage();
                myImg = im.getScaledInstance(id.getWidth(), id.getHeight(), Image.SCALE_SMOOTH);
                newImage = new ImageIcon(myImg);
                id.setIcon(newImage);
                img = rs.getBytes("hons");
                image = new ImageIcon(img);
                im = image.getImage();
                myImg = im.getScaledInstance(hon.getWidth(), hon.getHeight(), Image.SCALE_SMOOTH);
                newImage = new ImageIcon(myImg);
                hon.setIcon(newImage);
            }

            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(SearchStudent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_nextActionPerformed

    private void acceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptActionPerformed
        // TODO add your handling code here
        String tomail = null;
        try {
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/db", "root", "BokhtiarS250@");
            Statement st = con.createStatement();
            ResultSet rs;
            rs = st.executeQuery("select *from student");
            for (int i = 0; i <= c; i++) {
                if (rs.next() == false) {
                    flag = 1;
                }
            }
            if (flag == 1) {
                JOptionPane.showMessageDialog(null, "No more requests!");
            }
            if (flag == 0) {
                PreparedStatement ps = con
                        .prepareStatement("insert into project(Email, Password, `First Name`, `Last Name`, `Phone No`, Address, Batch, Roll, Hall, `Date Of Birth`, `Current Working Place`, Gender, Religion, `Blood Group`, Skills, Image, idcard, hons) select Email, Password, `First Name`, `Last Name`, `Phone No`, Address, Batch, Roll, Hall, `Date of Birth`, `Current Working Place`, Gender, Religion, `Blood Group`, Skills,Image, idcard, hons from student where Email= '" + rs.getString(1) + "'");
                tomail = rs.getString(1);
                ps.executeUpdate();
            }
        } catch (SQLException ex) {
            Logger.getLogger(SearchStudent.class.getName()).log(Level.SEVERE, null, ex);
        }

        String frommail = "ts503891@gmail.com";
        String subject = "hello";
        String pass = "tonystark503891";
        Properties pro = new Properties();
        pro.put("mail.smtp.auth", "true");
        pro.put("mail.smtp.starttls.enable", "true");
        pro.put("mail.smtp.host", "smtp.gmail.com");
        pro.put("mail.smtp.port", "587");
        Session s;
        s = Session.getDefaultInstance(pro, new javax.mail.Authenticator() {
            @Override
            protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                return new javax.mail.PasswordAuthentication(frommail, pass);
            }
        });
        try {
            MimeMessage m = new MimeMessage(s);
            m.setFrom(new InternetAddress(frommail));
            m.addRecipient(Message.RecipientType.TO, new InternetAddress(tomail));
            m.setSubject(subject);
            String ms = "Congratulations! Your request for IIT Alumni Registration has been accepted. Please login with your valid credentials.";
            m.setText(ms);
            Transport.send(m);

        } catch (HeadlessException | MessagingException e) {
            System.out.println(e);
        }

        try {
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/db", "root", "BokhtiarS250@");
            Statement st = con.createStatement();
            ResultSet rs;
            rs = st.executeQuery("select *from student");
            for (int i = 0; i <= c; i++) {
                if (rs.next() == false) {
                    flag = 1;
                }
            }
            if (flag == 1) {
                JOptionPane.showMessageDialog(null, "No more requests for delete!");
            }
            if (flag == 0) {
                PreparedStatement ps = con
                        .prepareStatement("delete from student where Email= '" + rs.getString(1) + "'");

                ps.executeUpdate();

            }
            DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
            tb.getDataVector().removeAllElements();
            tb.fireTableDataChanged();
            try {
                rs = st.executeQuery("select *from student");
                for (int i = 0; i <= c; i++) {
                    if (rs.next() == false) {
                        hon.setIcon(null);
                        id.setIcon(null);
                        pic.setIcon(null);
                        flag = 1;
                    }
                }
                if (flag == 1) {
                    JOptionPane.showMessageDialog(null, "No more requests!");
                }
                if (flag == 0) {
                    String email = rs.getString("Email");
                    String Fname = rs.getString("First Name");
                    String Lname = rs.getString("Last Name");
                    String Phone = rs.getString("Phone No");
                    String Address = rs.getString("Address");
                    String Batch = rs.getString("Batch");
                    String Roll = rs.getString("Roll");
                    String Hall = rs.getString("Hall");
                    String Dob = rs.getString("Date of Birth");
                    String Cwp = rs.getString("Current Working Place");
                    String Gender = rs.getString("Gender");
                    String Religion = rs.getString("Religion");
                    String Blood = rs.getString("Blood Group");
                    String Skills = rs.getString("Skills");
                    Object[] data = {email, Fname, Lname, Phone, Address, Batch, Roll, Hall, Dob, Cwp, Gender, Religion, Blood, Skills};
                    tb.addRow(data);
                    byte[] img = rs.getBytes("Image");
                    ImageIcon image = new ImageIcon(img);
                    Image im = image.getImage();
                    Image myImg = im.getScaledInstance(pic.getWidth(), pic.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon newImage = new ImageIcon(myImg);
                    pic.setIcon(newImage);
                    img = rs.getBytes("idcard");
                    image = new ImageIcon(img);
                    im = image.getImage();
                    myImg = im.getScaledInstance(id.getWidth(), id.getHeight(), Image.SCALE_SMOOTH);
                    newImage = new ImageIcon(myImg);
                    id.setIcon(newImage);
                    img = rs.getBytes("hons");
                    image = new ImageIcon(img);
                    im = image.getImage();
                    myImg = im.getScaledInstance(hon.getWidth(), hon.getHeight(), Image.SCALE_SMOOTH);
                    newImage = new ImageIcon(myImg);
                    hon.setIcon(newImage);
                }

                con.close();

            } catch (SQLException ex) {
                Logger.getLogger(SearchStudent.class.getName()).log(Level.SEVERE, null, ex);
            }

            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(SearchStudent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_acceptActionPerformed

    private void denyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_denyActionPerformed
        // TODO add your handling code here:
        String tomail = null;
        try {
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/db", "root", "BokhtiarS250@");
            Statement st = con.createStatement();
            ResultSet rs;
            rs = st.executeQuery("select *from student");
            for (int i = 0; i <= c; i++) {
                if (rs.next() == false) {
                    flag = 1;
                }
            }
            if (flag == 1) {
                JOptionPane.showMessageDialog(null, "No more requests for delete!");
            }
            if (flag == 0) {
                PreparedStatement ps = con
                        .prepareStatement("delete from student where Email= '" + rs.getString(1) + "'");
                tomail = rs.getString(1);
                ps.executeUpdate();

            }
            String frommail = "ts503891@gmail.com";
            String subject = "hello";
            String pass = "tonystark503891";
            Properties pro = new Properties();
            pro.put("mail.smtp.auth", "true");
            pro.put("mail.smtp.starttls.enable", "true");
            pro.put("mail.smtp.host", "smtp.gmail.com");
            pro.put("mail.smtp.port", "587");
            Session s;
            s = Session.getDefaultInstance(pro, new javax.mail.Authenticator() {
                @Override
                protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                    return new javax.mail.PasswordAuthentication(frommail, pass);
                }
            });
            try {
                MimeMessage m = new MimeMessage(s);
                m.setFrom(new InternetAddress(frommail));
                m.addRecipient(Message.RecipientType.TO, new InternetAddress(tomail));
                m.setSubject(subject);
                String ms = "Your request for the membership of IIT Alumni has been declined for some reason. Please try again later.";
                m.setText(ms);
                Transport.send(m);

            } catch (HeadlessException | MessagingException e) {
                System.out.println(e);
            }

            DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
            tb.getDataVector().removeAllElements();
            tb.fireTableDataChanged();
            try {
                rs = st.executeQuery("select *from student");
                for (int i = 0; i <= c; i++) {
                    if (rs.next() == false) {
                        hon.setIcon(null);
                        id.setIcon(null);
                        pic.setIcon(null);
                        flag = 1;
                    }
                }
                if (flag == 1) {
                    JOptionPane.showMessageDialog(null, "No more requests!");
                }
                if (flag == 0) {
                    String email = rs.getString("Email");
                    String Fname = rs.getString("First Name");
                    String Lname = rs.getString("Last Name");
                    String Phone = rs.getString("Phone No");
                    String Address = rs.getString("Address");
                    String Batch = rs.getString("Batch");
                    String Roll = rs.getString("Roll");
                    String Hall = rs.getString("Hall");
                    String Dob = rs.getString("Date of Birth");
                    String Cwp = rs.getString("Current Working Place");
                    String Gender = rs.getString("Gender");
                    String Religion = rs.getString("Religion");
                    String Blood = rs.getString("Blood Group");
                    String Skills = rs.getString("Skills");
                    Object[] data = {email, Fname, Lname, Phone, Address, Batch, Roll, Hall, Dob, Cwp, Gender, Religion, Blood, Skills};
                    tb.addRow(data);
                    byte[] img = rs.getBytes("Image");
                    ImageIcon image = new ImageIcon(img);
                    Image im = image.getImage();
                    Image myImg = im.getScaledInstance(pic.getWidth(), pic.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon newImage = new ImageIcon(myImg);
                    pic.setIcon(newImage);
                    img = rs.getBytes("idcard");
                    image = new ImageIcon(img);
                    im = image.getImage();
                    myImg = im.getScaledInstance(id.getWidth(), id.getHeight(), Image.SCALE_SMOOTH);
                    newImage = new ImageIcon(myImg);
                    id.setIcon(newImage);
                    img = rs.getBytes("hons");
                    image = new ImageIcon(img);
                    im = image.getImage();
                    myImg = im.getScaledInstance(hon.getWidth(), hon.getHeight(), Image.SCALE_SMOOTH);
                    newImage = new ImageIcon(myImg);
                    hon.setIcon(newImage);
                }

                con.close();

            } catch (SQLException ex) {
                Logger.getLogger(SearchStudent.class.getName()).log(Level.SEVERE, null, ex);
            }

            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(SearchStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_denyActionPerformed

    private void deny1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deny1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deny1ActionPerformed

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        // TODO add your handling code here:
        AdminFrame u = new AdminFrame();
        this.setVisible(false);
        u.setVisible(true);
    }//GEN-LAST:event_backbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Requested.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Requested.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Requested.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Requested.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Requested().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accept;
    private javax.swing.JButton backbutton;
    private javax.swing.JLabel background;
    private javax.swing.JButton deny;
    private javax.swing.JButton deny1;
    private javax.swing.JLabel hon;
    private javax.swing.JLabel id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea mm;
    private javax.swing.JButton next;
    private javax.swing.JLabel pic;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
